
eclipse.project.name = 'joci-tools:core'

dependencies {

    implementation      'org.slf4j:slf4j-api:1.7.25'

	
    implementation      'io.netty:netty-buffer:4.1.22.Final'
    implementation      'com.google.guava:guava:24.1-jre'
	implementation      'commons-io:commons-io:2.6'
	implementation      'com.fasterxml.jackson.core:jackson-databind:2.9.5'


    compileOnly         'com.google.errorprone:error_prone_annotations:2.3.1'
    compileOnly         'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.100'
    compileOnly         'org.immutables:builder:2.6.1'
    compileOnly         'org.immutables:value:2.6.1'

    annotationProcessor 'org.immutables:builder:2.6.1'
    annotationProcessor 'org.immutables:value:2.6.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    testImplementation  'ch.qos.logback:logback-classic:1.2.3'
    
}


eclipse {
    classpath {
        file.whenMerged { cp ->
            cp.entries.add( new org.gradle.plugins.ide.eclipse.model.SourceFolder('build/generated/source/apt/main/', null) )
        }
    }
}

compileJava {
    inputs.property("moduleName", "joci.core")
    doFirst {
        options.compilerArgs = [
            '--module-path', classpath.asPath,            
        ]
        classpath = files()
    }
}


eclipse.classpath.file {
  whenMerged {
    entries
      .findAll { it.kind.equals('lib') || it.kind.equals('src') }
      .each {
        it.entryAttributes['module'] = 'true' 
      } 
  }
}

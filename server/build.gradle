buildscript {
  repositories {
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'com.bmuschko:gradle-docker-plugin:3.4.3'
  }
}

apply plugin: 'application'
apply plugin: 'com.bmuschko.docker-java-application'

mainClassName = 'io.zrz.joci.registry.Main'

eclipse.project.name = 'joci-tools:server'

dependencies {

  implementation      'org.glassfish.jersey.containers:jersey-container-grizzly2-http:2.26'
  implementation      'org.glassfish.jersey.inject:jersey-hk2:2.26'

  implementation 'org.slf4j:slf4j-api:1.7.25'
  implementation 'com.google.guava:guava:24.1-jre'
  implementation 'org.apache.commons:commons-compress:1.16.1'
  implementation 'commons-io:commons-io:2.6'
  implementation 'com.fasterxml.jackson.core:jackson-databind:2.9.5'
  implementation 'ch.qos.logback:logback-classic:1.2.3'
  implementation 'com.github.rvesse:airline:2.4.0'

  implementation project(':core')
  implementation project(':jpx')

  compileOnly         'com.google.errorprone:error_prone_annotations:2.3.1'
  compileOnly         'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.100'
  compileOnly         'org.immutables:builder:2.6.1'
  compileOnly         'org.immutables:value:2.6.1:annotations'

  annotationProcessor 'org.immutables:builder:2.6.1'
  annotationProcessor 'org.immutables:value:2.6.1'

  // Use JUnit test framework
  testImplementation 'junit:junit:4.12'
  
  
  // urgh. fix errors in jersey with java9. can't disable XML?   
  implementation 'javax.xml.bind:jaxb-api:2.3.0'
  implementation 'com.sun.xml.bind:jaxb-impl:2.3.0'
  implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.0'
  implementation 'javax.activation:activation:1.1.1'
  
}


docker {
    javaApplication {
        baseImage = 'openjdk:11-jre-slim'
        ports = [ 8080 ]
        tag = '937149692049.dkr.ecr.us-west-2.amazonaws.com/adrp/repository'
    }
}


compileJava {
    inputs.property("moduleName", "joci.server")
    doFirst {
//        options.compilerArgs = [
//            '--module-path', classpath.asPath,            
//        ]
//        classpath = files()
    }
}


eclipse.classpath.file {
  whenMerged {
    entries
      .findAll { it.kind.equals('lib') || it.kind.equals('src') }
      .each {
        it.entryAttributes['module'] = 'true' 
      } 
  }
}
